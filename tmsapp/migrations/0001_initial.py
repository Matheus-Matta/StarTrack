# Generated by Django 5.2 on 2025-05-23 01:20

import django.db.models.deletion
import django.utils.timezone
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('crmapp', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Documento')),
                ('file', models.FileField(upload_to='documents/%Y/%m/', verbose_name='Arquivo')),
                ('issued_date', models.DateField(verbose_name='Data de Emissão')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Data de Validade')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
                'ordering': ['-issued_date'],
            },
        ),
        migrations.CreateModel(
            name='DocumentPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='document_photos/%Y/%m/', verbose_name='Foto do Documento')),
                ('caption', models.CharField(blank=True, help_text='Descrição opcional da foto', max_length=255, null=True, verbose_name='Legenda')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Foto de Documento',
                'verbose_name_plural': 'Fotos de Documento',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('type', models.CharField(choices=[('warehouse', 'Armazém'), ('store', 'Loja'), ('distribution_center', 'Centro de Distribuição'), ('hub', 'Hub'), ('other', 'Outro')], default='other', max_length=30, verbose_name='Tipo de Local')),
                ('address', models.CharField(max_length=255, verbose_name='Endereço')),
                ('number', models.CharField(default='0', max_length=10, verbose_name='Número')),
                ('neighborhood', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=100, verbose_name='Estado')),
                ('zip_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='CEP')),
                ('country', models.CharField(default='Brasil', max_length=100, verbose_name='País')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_principal', models.BooleanField(default=False, verbose_name='Principal')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locations_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Local da Empresa',
                'verbose_name_plural': 'Locais da Empresa',
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, verbose_name='Número do Pedido')),
                ('street', models.CharField(max_length=255, verbose_name='Rua')),
                ('number', models.CharField(max_length=20, verbose_name='Número')),
                ('neighborhood', models.CharField(max_length=100, verbose_name='Bairro')),
                ('city', models.CharField(max_length=100, verbose_name='Município')),
                ('state', models.CharField(max_length=50, verbose_name='Estado')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='CEP')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ponto de Referência')),
                ('filial', models.CharField(blank=True, max_length=10, null=True, verbose_name='Filial')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('status', models.CharField(choices=[('pending', 'pendente'), ('scheduled', 'agendada'), ('in-transit', 'em Trânsito'), ('delivered', 'entregue'), ('failed', 'falha na Entrega'), ('cancelled', 'cancelada')], db_index=True, default='pending', help_text='Situação atual da entrega', max_length=15, verbose_name='Status')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliveries_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('customer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deliveries', to='crmapp.customer', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Entrega',
                'verbose_name_plural': 'Entregas',
            },
        ),
        migrations.CreateModel(
            name='Carrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Nome da Transportadora')),
                ('description', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='Descrição')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, verbose_name='E-mail')),
                ('cnpj', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='CNPJ')),
                ('street', models.CharField(blank=True, max_length=200, null=True, verbose_name='Logradouro')),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='CEP')),
                ('neighborhood', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carriers_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('document', models.ManyToManyField(blank=True, help_text='Documentos relacionados a transportadora', related_name='documents_carrier', to='tmsapp.document', verbose_name='Documentos')),
            ],
            options={
                'verbose_name': 'Transportadora',
                'verbose_name_plural': 'Transportadoras',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='document',
            name='photos',
            field=models.ManyToManyField(blank=True, related_name='documents', to='tmsapp.documentphoto', verbose_name='Fotos do Documento'),
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('license_number', models.CharField(blank=True, db_index=True, max_length=20, null=True, unique=True, verbose_name='CNH')),
                ('license_category', models.CharField(blank=True, choices=[('Categoria A', 'Categoria A'), ('Categoria B', 'Categoria B'), ('Categoria C', 'Categoria C'), ('Categoria D', 'Categoria D'), ('Categoria E', 'Categoria E'), ('Categoria AB', 'Categoria AB')], help_text='Categoria habilitada do motorista', max_length=30, null=True, verbose_name='Categoria da CNH')),
                ('license_expiry', models.DateField(blank=True, null=True, verbose_name='Validade da CNH')),
                ('phone', models.CharField(blank=True, db_index=True, max_length=20, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, verbose_name='E-mail')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_outsourced', models.BooleanField(default=False, verbose_name='Terceirizado')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drivers_created', to=settings.AUTH_USER_MODEL)),
                ('document', models.ManyToManyField(blank=True, help_text='Documentos relacionados ao motorista', null=True, related_name='documents_drive', to='tmsapp.document', verbose_name='Documentos')),
                ('user', models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Motorista',
                'verbose_name_plural': 'Motoristas',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalCarrier',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Nome da Transportadora')),
                ('description', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='Descrição')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, verbose_name='E-mail')),
                ('cnpj', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='CNPJ')),
                ('street', models.CharField(blank=True, max_length=200, null=True, verbose_name='Logradouro')),
                ('number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('state', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='CEP')),
                ('neighborhood', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Transportadora',
                'verbose_name_plural': 'historical Transportadoras',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCompanyLocation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('type', models.CharField(choices=[('warehouse', 'Armazém'), ('store', 'Loja'), ('distribution_center', 'Centro de Distribuição'), ('hub', 'Hub'), ('other', 'Outro')], default='other', max_length=30, verbose_name='Tipo de Local')),
                ('address', models.CharField(max_length=255, verbose_name='Endereço')),
                ('number', models.CharField(default='0', max_length=10, verbose_name='Número')),
                ('neighborhood', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('city', models.CharField(max_length=100, verbose_name='Cidade')),
                ('state', models.CharField(max_length=100, verbose_name='Estado')),
                ('zip_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='CEP')),
                ('country', models.CharField(default='Brasil', max_length=100, verbose_name='País')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_principal', models.BooleanField(default=False, verbose_name='Principal')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Data de Cadastro')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Data de Atualização')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Local da Empresa',
                'verbose_name_plural': 'historical Locais da Empresa',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDelivery',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50, verbose_name='Número do Pedido')),
                ('street', models.CharField(max_length=255, verbose_name='Rua')),
                ('number', models.CharField(max_length=20, verbose_name='Número')),
                ('neighborhood', models.CharField(max_length=100, verbose_name='Bairro')),
                ('city', models.CharField(max_length=100, verbose_name='Município')),
                ('state', models.CharField(max_length=50, verbose_name='Estado')),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='CEP')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('reference', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ponto de Referência')),
                ('filial', models.CharField(blank=True, max_length=10, null=True, verbose_name='Filial')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('status', models.CharField(choices=[('pending', 'pendente'), ('scheduled', 'agendada'), ('in-transit', 'em Trânsito'), ('delivered', 'entregue'), ('failed', 'falha na Entrega'), ('cancelled', 'cancelada')], db_index=True, default='pending', help_text='Situação atual da entrega', max_length=15, verbose_name='Status')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Data de Cadastro')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Data de Atualização')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('customer', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='crmapp.customer', verbose_name='Cliente')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Entrega',
                'verbose_name_plural': 'historical Entregas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDriver',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('license_number', models.CharField(blank=True, db_index=True, max_length=20, null=True, verbose_name='CNH')),
                ('license_category', models.CharField(blank=True, choices=[('Categoria A', 'Categoria A'), ('Categoria B', 'Categoria B'), ('Categoria C', 'Categoria C'), ('Categoria D', 'Categoria D'), ('Categoria E', 'Categoria E'), ('Categoria AB', 'Categoria AB')], help_text='Categoria habilitada do motorista', max_length=30, null=True, verbose_name='Categoria da CNH')),
                ('license_expiry', models.DateField(blank=True, null=True, verbose_name='Validade da CNH')),
                ('phone', models.CharField(blank=True, db_index=True, max_length=20, null=True, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=254, null=True, verbose_name='E-mail')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_outsourced', models.BooleanField(default=False, verbose_name='Terceirizado')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Motorista',
                'verbose_name_plural': 'historical Motoristas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRoute',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome')),
                ('color', models.CharField(default='#3498db', max_length=7, verbose_name='Cor')),
                ('stops', models.PositiveIntegerField(verbose_name='Paradas')),
                ('distance_km', models.FloatField(verbose_name='Distância (km)')),
                ('time_min', models.FloatField(verbose_name='Tempo (minutos)')),
                ('geojson', models.JSONField(verbose_name='GeoJSON')),
                ('points', models.JSONField(verbose_name='Points')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Atualizado em')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Rota',
                'verbose_name_plural': 'historical Rotas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRouteArea',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('geojson', models.TextField(blank=True, default=dict, help_text='Texto JSON bruto; será convertido depois', null=True, verbose_name='GeoJSON')),
                ('neighborhoods', models.JSONField(blank=True, default=list, verbose_name='Bairros')),
                ('cities', models.JSONField(blank=True, default=list, verbose_name='Cidades')),
                ('cep_start', models.JSONField(blank=True, default=list, verbose_name='CEP Início')),
                ('cep_end', models.JSONField(blank=True, default=list, verbose_name='CEP Fim')),
                ('areatotal', models.FloatField(blank=True, null=True, verbose_name='Área Total (m²)')),
                ('kmtotal', models.FloatField(blank=True, null=True, verbose_name='Distância Total (km)')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('disabled', 'Desabilitado')], default='active', max_length=10, verbose_name='Status')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('hex_color', models.CharField(default='#0074D9', help_text='Código de cor hexadecimal, ex: #FF0000', max_length=7, verbose_name='Cor HEX')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Área de Rota',
                'verbose_name_plural': 'historical Áreas de Rotas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRouteComposition',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('type', models.CharField(choices=[('city', 'Rotas por cidade'), ('unique', 'Rota única'), ('custom', 'Rota Personalizada'), ('other', 'Outro')], default='other', max_length=30, verbose_name='Tipo de Rota')),
                ('observations', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Composição de Rota',
                'verbose_name_plural': 'historical Composições de Rotas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Load',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Carregamento')),
                ('capacity_volume', models.DecimalField(decimal_places=2, editable=False, max_digits=8, verbose_name='Capacidade Veículo (m³)')),
                ('total_volume', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Volume Total (m³)')),
                ('total_weight', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Peso Total (kg)')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('loaded', 'Carregado'), ('in_transit', 'Em trânsito'), ('completed', 'Concluído'), ('decommissioned', 'Baixado')], default='pending', max_length=15, verbose_name='Status da Carga')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='loads_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='loads', to='tmsapp.driver', verbose_name='Motorista')),
            ],
            options={
                'verbose_name': 'Carga',
                'verbose_name_plural': 'Cargas',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalLoadDelivery',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Volume (m³)')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Peso (kg)')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Ordem de entrega')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Atualizado em')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('delivery', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.delivery')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('load', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.load')),
            ],
            options={
                'verbose_name': 'historical Item de Carga',
                'verbose_name_plural': 'historical Itens de Carga',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='LoadDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Volume (m³)')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Peso (kg)')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Ordem de entrega')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loaddelivery_set', to='tmsapp.delivery')),
                ('load', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loaddelivery_set', to='tmsapp.load')),
            ],
            options={
                'verbose_name': 'Item de Carga',
                'verbose_name_plural': 'Itens de Carga',
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='load',
            name='deliveries',
            field=models.ManyToManyField(related_name='loads', through='tmsapp.LoadDelivery', to='tmsapp.delivery'),
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome')),
                ('color', models.CharField(default='#3498db', max_length=7, verbose_name='Cor')),
                ('stops', models.PositiveIntegerField(verbose_name='Paradas')),
                ('distance_km', models.FloatField(verbose_name='Distância (km)')),
                ('time_min', models.FloatField(verbose_name='Tempo (minutos)')),
                ('geojson', models.JSONField(verbose_name='GeoJSON')),
                ('points', models.JSONField(verbose_name='Points')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='routes_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Rota',
                'verbose_name_plural': 'Rotas',
            },
        ),
        migrations.AddField(
            model_name='load',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loads', to='tmsapp.route', verbose_name='Rota'),
        ),
        migrations.CreateModel(
            name='HistoricalRouteDelivery',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('position', models.PositiveIntegerField(verbose_name='Posição na Rota')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('delivery', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.delivery')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.route')),
            ],
            options={
                'verbose_name': 'historical Parada de Rota',
                'verbose_name_plural': 'historical Paradas de Rota',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='RouteArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('geojson', models.TextField(blank=True, default=dict, help_text='Texto JSON bruto; será convertido depois', null=True, verbose_name='GeoJSON')),
                ('neighborhoods', models.JSONField(blank=True, default=list, verbose_name='Bairros')),
                ('cities', models.JSONField(blank=True, default=list, verbose_name='Cidades')),
                ('cep_start', models.JSONField(blank=True, default=list, verbose_name='CEP Início')),
                ('cep_end', models.JSONField(blank=True, default=list, verbose_name='CEP Fim')),
                ('areatotal', models.FloatField(blank=True, null=True, verbose_name='Área Total (m²)')),
                ('kmtotal', models.FloatField(blank=True, null=True, verbose_name='Distância Total (km)')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('disabled', 'Desabilitado')], default='active', max_length=10, verbose_name='Status')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('hex_color', models.CharField(default='#0074D9', help_text='Código de cor hexadecimal, ex: #FF0000', max_length=7, verbose_name='Cor HEX')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route_areas_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Área de Rota',
                'verbose_name_plural': 'Áreas de Rotas',
            },
        ),
        migrations.CreateModel(
            name='HistoricalVehicle',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('license_plate', models.CharField(db_index=True, max_length=10, verbose_name='Placa')),
                ('brand', models.CharField(max_length=50, verbose_name='Marca')),
                ('model', models.CharField(max_length=50, verbose_name='Modelo')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Ano de Fabricação')),
                ('vehicle_type', models.CharField(choices=[('driving-car', 'Carro'), ('driving-hgv', 'Caminhão/Veículo pesado')], default='driving-car', max_length=20, verbose_name='Tipo de Veículo')),
                ('is_outsourced', models.BooleanField(default=False, verbose_name='Terceirizado')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('capacity_volume', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Capacidade (m³)')),
                ('capacity_weight', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Capacidade (kg)')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('maintenance', 'Em manutenção'), ('decommissioned', 'Baixado')], default='active', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('carrier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.carrier', verbose_name='Transportadora')),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.driver', verbose_name='Motorista Interno')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route_area', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.routearea', verbose_name='Área de Rota')),
            ],
            options={
                'verbose_name': 'historical Veículo',
                'verbose_name_plural': 'historical Veículos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='RouteComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('type', models.CharField(choices=[('city', 'Rotas por cidade'), ('unique', 'Rota única'), ('custom', 'Rota Personalizada'), ('other', 'Outro')], default='other', max_length=30, verbose_name='Tipo de Rota')),
                ('observations', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='route_compositions_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('routes', models.ManyToManyField(related_name='compositions', to='tmsapp.route', verbose_name='Rotas')),
            ],
            options={
                'verbose_name': 'Composição de Rota',
                'verbose_name_plural': 'Composições de Rotas',
            },
        ),
        migrations.CreateModel(
            name='RouteDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(verbose_name='Posição na Rota')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delivery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tmsapp.delivery')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tmsapp.route')),
            ],
            options={
                'verbose_name': 'Parada de Rota',
                'verbose_name_plural': 'Paradas de Rota',
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='route',
            name='deliveries',
            field=models.ManyToManyField(related_name='routes', through='tmsapp.RouteDelivery', to='tmsapp.delivery', verbose_name='Entregas'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_plate', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='Placa')),
                ('brand', models.CharField(max_length=50, verbose_name='Marca')),
                ('model', models.CharField(max_length=50, verbose_name='Modelo')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Ano de Fabricação')),
                ('vehicle_type', models.CharField(choices=[('driving-car', 'Carro'), ('driving-hgv', 'Caminhão/Veículo pesado')], default='driving-car', max_length=20, verbose_name='Tipo de Veículo')),
                ('is_outsourced', models.BooleanField(default=False, verbose_name='Terceirizado')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('capacity_volume', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Capacidade (m³)')),
                ('capacity_weight', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Capacidade (kg)')),
                ('status', models.CharField(choices=[('active', 'Ativo'), ('maintenance', 'Em manutenção'), ('decommissioned', 'Baixado')], default='active', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles', to='tmsapp.carrier', verbose_name='Transportadora')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles_created', to=settings.AUTH_USER_MODEL)),
                ('document', models.ManyToManyField(blank=True, help_text='Documentos relacionados ao veículo', related_name='documents_vehicles', to='tmsapp.document', verbose_name='Documentos')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles', to='tmsapp.driver', verbose_name='Motorista Interno')),
                ('route_area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles', to='tmsapp.routearea', verbose_name='Área de Rota')),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
                'ordering': ['license_plate'],
            },
        ),
        migrations.AddField(
            model_name='load',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='loads', to='tmsapp.vehicle', verbose_name='Veículo'),
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Data da Inspeção')),
                ('status', models.BooleanField(default=True, verbose_name='Aprovado')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspections_created', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='tmsapp.vehicle')),
            ],
            options={
                'verbose_name': 'Inspeção',
                'verbose_name_plural': 'Inspeções',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalLoad',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Carregamento')),
                ('capacity_volume', models.DecimalField(decimal_places=2, editable=False, max_digits=8, verbose_name='Capacidade Veículo (m³)')),
                ('total_volume', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Volume Total (m³)')),
                ('total_weight', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Peso Total (kg)')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('loaded', 'Carregado'), ('in_transit', 'Em trânsito'), ('completed', 'Concluído'), ('decommissioned', 'Baixado')], default='pending', max_length=15, verbose_name='Status da Carga')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Atualizado em')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('driver', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.driver', verbose_name='Motorista')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('route', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.route', verbose_name='Rota')),
                ('vehicle', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tmsapp.vehicle', verbose_name='Veículo')),
            ],
            options={
                'verbose_name': 'historical Carga',
                'verbose_name_plural': 'historical Cargas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='VehicleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Início')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Fim')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assignments', to='tmsapp.driver')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='tmsapp.vehicle')),
            ],
            options={
                'verbose_name': 'Atribuição de Veículo',
                'verbose_name_plural': 'Atribuições de Veículo',
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddIndex(
            model_name='carrier',
            index=models.Index(fields=['name'], name='tmsapp_carr_name_567441_idx'),
        ),
        migrations.AddIndex(
            model_name='carrier',
            index=models.Index(fields=['description'], name='tmsapp_carr_descrip_2ee3f6_idx'),
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['license_number'], name='tmsapp_driv_license_007932_idx'),
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['email'], name='tmsapp_driv_email_9a510e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='loaddelivery',
            unique_together={('load', 'delivery')},
        ),
        migrations.AlterUniqueTogether(
            name='routedelivery',
            unique_together={('route', 'delivery')},
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['license_plate'], name='tmsapp_vehi_license_eac79a_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['brand', 'model'], name='tmsapp_vehi_brand_fa22e4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vehicleassignment',
            unique_together={('vehicle', 'driver', 'start_date')},
        ),
    ]
